Module 1: What is code? Reading and reflection. 
Module 1 Objective: To read and reflect on the nature of code and creation through digitized data and software. 
Read Article: https://www.bloomberg.com/graphics/2015-paul-ford-what-is-code/ 
Answer the following questions in a .txt file saved as: What_is_code_reflection 
In your own words, what is a computer really doing whenever you type a letter on a keyboard? (150 words max) 
A computer is working backwards. It’s taking in consideration the letter you stroked amongst the keyboard. A computer must understand the signals that you want displayed on the screen, with a letter or any key on the keyboard there must be a connection amongst the signal of the key, the memory of the key that you want displayed, and the displacement. 
In your own words, how do computers use input and output to create experiences? (250 words max) I know this is commonly used with UX and UI design. An input of a user takes in consideration every optimal choice that a user can be making. When taking in consideration a user’s experience it can be anything from how long they click a button and how much exposure the consumer is on that webpage. In the article, it is mentioned how with Java’s input they created tons of libraries to make it more efficient. I think this is one way of looking at it, yes you can make optimal choices to make libraries and make things more efficient but you can also create an experience by efficiency. I think this also goes in consideration with what happens when you click a letter. What do you want to happen? 
Explain why software products are essentially “infinitely reproducible nothings.” (150 words max) Software products are essentially infinitely reproducible nothings because it is a mass production of free system’s that work on for infinite amounts of time.  You’re selling something that can make something else work but there’s always going to be another upgrade, another software, and another change that needs to be fixed. This is what makes them infinite as they are so many and reproducible as a constant new amount is made. 
Explain in your own words how code becomes software. (150 words max) Code becomes software as it compiles more files that can massively produce more work. The whole intent is to have something that you create to be executed to be a software as a whole. There has to be instruction on code on how overall everything is interconnected to be considered a software.
Explain “algorithms” in your own words. (150 words max) 
Algorithms are formulations that are made to make an execution faster. Computer’s don’t have the ability naturally to process math components or make articulate formulations of getting from one point to another. Algorithms help create a faster process to derive to the same place, in my eyes I see it commonly a lot in Data Science. You need to make a formula to make an engine that works faster than another. 
Explain the DRY principle. (100 words max) 
The Dry Principle stands for Don’t Repeat Yourself. I think it is essentially used so we aren’t constantly doing the same coding algorithms over and over again. For example I think it’s best represented in a loop, programmers always create loops so we aren’t doing the same things over and over again rather in one swift manner. 
In your own words, what is object-oriented programming? (100 words max) Object oriented programming is an organized way of programming in which many functions are then organized in one manner under a language. It’s a great way to relay and create several functions but isn’t always the best organization system.In Python it is often used as a more organized structure to hide all these computations that one is often not exposed to. 
In your own words to explain data and how it relates to code. (100 Words max) Data relates to code because it is used to organize code. Data is the filtration of every input of several users that exist on everything. In order to organize data, we need to code, and to understand code we need to have data. Having public data, can end up solving so many issues or creating new one’s as you’re able to work with other databases yourself and make new changes. People can automate the data, which then again goes hand in hand with code. 
What is a framework? (150 words max) Frame work is the base of all the work you’re doing amongst your programming. It’s a simple way to demonstrate the work you’re doing without all the essential crazy code. It allows to show functions that are already pre- existent that can come in contact with other devices that partake in a whole project. 
What is debugging? (150 words max) Debugging is the fixing of programming. When creating so many complex formulations you’re bound to fall amongst so many issues. Debugging is the process of being able to understand these errors are crashes that we will always fall into, and to take note so we don’t make the same mistake again. 
Now, with more of an understanding of what code is, why do you want to learn how to code? (500 words max) I want to learn how to code because it is the backwards work of everything that we know. I like to see things for what they are and I think everyone enjoys the final product of just about anything, but with code you have the ability to modify. I think like mentioned in the article it is important to understand that code is for everyone it isn’t limited to one person. Code has the ability to change the re- work of everything and is often perceived as scary because it has the right to do so. It is so easy to see as a business that you aren’t updated enough, up to trends, or even processing so much. Things get out dated, and methods aren’t always the best. However, with coding you have the ability to create and make something. I essentially always just wanted to go through a process where I was able to analyze something from the beginning to the end, the backwards work is the most essential.